function estimateParams

% Porcess options

opts = mainSettings();

rngEst    = opts.estim.rngEst;
spec      = opts.estim.spec;
dbMult    = opts.filter.dbMult;
numParam  = length(fieldnames(spec));
numDraws  = opts.estim.numDraws;
plotPost  = opts.estim.plotPost;

% Load the model

tmp = load("results/model.mat");
m   = tmp.m(1); % Always start from the baseline parametrization

% Load the data

tmp = load("results/data.mat");
db   = tmp.dbObs;

% Find porsterior mode
[summary, pos, ~, ~, mest] = estimate(m, db, rngEst, spec, ...
  "filter", {"Multiply", dbMult});

display(summary)

[nr, nc] = utils.calcSubplotSize(numParam);

if ~plotPost
  
  plotpp( ...
    spec, summary, [], ...
    "PlotPrior",  {"LineStyle", "--"}, ...
    "PlotMode",   {"LineWidth", 3}, ...
    "PlotInit",   {"LineWidth", 3}, ...
    "PlotBounds", {"LineStyle", "--"}, ...
    "Title",      {"FontSize", 8}, ...
    "Subplot",    [nr, nc] ...
    ); %#ok<*CLARRSTR>
  
else
  
  % Simulate from the posterior
  [theta, logpost, ar, posFinal, scale, finalCov] = arwm( ...
    pos, numDraws, ...
    "Progress",         true, ...
    "AdaptScale",       0.50, ...
    "AdaptProposalCov", 0.50, ...
    "Gamma",            0.51, ...
    "BurnIn",           0.20 ...
    );
  
  % Plot the results
  
  postStats = stats(pos, theta, logpost, 'Mdd', false);
  
  [~, ~, h] = plotpp( ...
    spec, summary, theta, ...
    "PlotPrior",  {"LineStyle", "--"}, ...
    "PlotMode",   {"LineWidth", 3}, ...
    "PlotInit",   {"LineWidth", 3}, ...
    "PlotBounds", {"LineStyle", "--"}, ...
    "Title",      {"FontSize", 8}, ...
    "Subplot",    [nr, nc] ...
    ); %#ok<*CLARRSTR>
  
  for f = h.figure
    figure(f);
    visual.hlegend( ...
      "Bottom", ...
      "Prior Density", "Starting Value", ...
      "Posterior Mode", "Posterior Density", ...
      "Lower Bound", "Upper Bound" ...
      );
  end
  
  %  Save the results
  save("results/estimation.mat", "theta", "logpost", "ar", "posFinal", "scale", "finalCov", "postStats")
  
  
end

% Write setParam file with estimated parameters
utils.writeParams("+parameters/setParamEst.m", mest);

end